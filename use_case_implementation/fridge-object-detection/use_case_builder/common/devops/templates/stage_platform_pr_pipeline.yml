parameters:
  - name: exec_environment
    displayName: "Execution Environment"
  - name: use_case_type
    displayName: "type of use case to execute"
  - name: deploy_to_device_target_condition
    displayName: "deployment target device condition"

stages:
  - stage: Build_Edge_Modules
    displayName: Build docker image
    dependsOn:
      - variable_generation
      - build_validation
    variables:
      - template: ${{variables['System.DefaultWorkingDirectory']}}/use_case_builder/common/devops/templates/variable_init_for_a_stage.yml
    jobs:
      - job: build_docker_image
        steps:
          - task: UsePythonVersion@0
            displayName: "install python 3.8"
            continueOnError: false
            inputs:
              versionSpec: "3.8"

          - task: AzureKeyVault@2
            continueOnError: false
            inputs:
              azureSubscription: $(AZURE_RM_SVC_CONNECTION)
              KeyVaultName: $(KEYVAULT_NAME)
              SecretsFilter: "*"
              RunAsPreJob: false

          - task: Bash@3
            displayName: Add Azure IoT Extensions
            inputs:
              targetType: "inline"
              script: "pip install -U pyOpenSSL==22.0.0"

          - task: AzureCLI@2
            displayName: Build and Push Orchestrator Docker Image
            continueOnError: false
            inputs:
              azureSubscription: $(AZURE_RM_SVC_CONNECTION)
              scriptType: bash
              workingDirectory: $(system.DefaultWorkingDirectory)/use_case_builder/${{parameters.use_case_type}}/modules/$(ORCHESTRATOR_MODULE_NAME)
              scriptLocation: inlineScript
              inlineScript: |
                set -e # fail on error
                docker login "$(ACR_URL)" -u "$(ACR_USERNAME)" -p "$(ACR_PASSWORD)"  
                docker buildx build -f Dockerfile.amd64 --platform linux/amd64 -t $(ACR_URL)/$(ORCHESTRATOR_MODULE_NAME):$(Build.BuildNumber) . --push
                echo "##vso[task.setvariable variable=ORCHESTRATOR_DOCKER_IMAGE_NAME;isOutput=true;]$(ORCHESTRATOR_MODULE_NAME)"
                echo "##vso[task.setvariable variable=ORCHESTRATOR_DOCKER_IMAGE_VERSION;isOutput=true;]$(Build.BuildNumber)"

          - task: AzureCLI@2
            displayName: Build and Push E2E Docker Image
            continueOnError: false
            inputs:
              azureSubscription: $(AZURE_RM_SVC_CONNECTION)
              scriptType: bash
              workingDirectory: $(system.DefaultWorkingDirectory)/use_case_builder/${{parameters.use_case_type}}/modules/$(E2E_TEST_MODULE_NAME)
              scriptLocation: inlineScript
              inlineScript: |
                set -e # fail on error
                docker login "$(ACR_URL)" -u "$(ACR_USERNAME)" -p "$(ACR_PASSWORD)"  
                docker buildx build -f Dockerfile.amd64 --platform linux/amd64 -t $(ACR_URL)/$(E2E_TEST_MODULE_NAME):$(Build.BuildNumber) . --push
                echo "##vso[task.setvariable variable=E2E_DOCKER_IMAGE_NAME;isOutput=true;]$(E2E_TEST_MODULE_NAME)"
                echo "##vso[task.setvariable variable=E2E_DOCKER_IMAGE_VERSION;isOutput=true;]$(Build.BuildNumber)"

    # Generate Deployment manifest
  - stage: Generate_Edge_Deployment_Manifest
    displayName: Generate_Edge_Deployment_Manifest
    dependsOn:
      - variable_generation
      - build_validation
      - Build_Edge_Modules
    variables:
      - template: ${{variables['System.DefaultWorkingDirectory']}}/use_case_builder/common/devops/templates/variable_init_for_a_stage.yml
      - name: RTSP_DOCKER_IMAGE_VERSION
        value: "latest"
      - name: ORCHESTRATOR_DOCKER_IMAGE_VERSION
        value: $(Build.BuildNumber)
      - name: E2E_DOCKER_IMAGE_VERSION
        value: $(Build.BuildNumber)
    jobs:
      - template: ${{variables['System.DefaultWorkingDirectory']}}/use_case_builder/common/devops/templates/job_generate_edge_manifest.yml
        parameters:
          use_case_type: ${{parameters.use_case_type}}
          deployment_file_name: "deployment.template.e2e.json"

  - stage: "deploy_iot_edge"
    displayName: "Deploy to IOT Edge"
    variables:
      - template: ${{variables['System.DefaultWorkingDirectory']}}/use_case_builder/common/devops/templates/variable_init_for_a_stage.yml
    dependsOn:
      - variable_generation
      - Build_Edge_Modules
      - Generate_Edge_Deployment_Manifest
    jobs:
      - template: ${{variables['System.DefaultWorkingDirectory']}}/use_case_builder/common/devops/templates/job_edge_deployment.yml
        parameters:
          target_condition: ${{parameters.deploy_to_device_target_condition}}
          deployment_file_name: "deployment.template.e2e.json"

  - template: ${{variables['System.DefaultWorkingDirectory']}}/use_case_builder/common/devops/templates/stage_e2e_test.yml
    parameters:
      exec_environment: ${{parameters.exec_environment}}
      use_case_type: ${{parameters.use_case_type}}
      deploy_to_device_target_condition: ${{parameters.deploy_to_device_target_condition}}
