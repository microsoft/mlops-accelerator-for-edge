parameters:
  - name: exec_environment
    displayName: "Execution Environment"
    default: "dev"
  - name: model_type
    displayName: "type of model to execute"
  - name: model_name
    displayName: "model name"
    default: $(MODEL_NAME)
  - name: dependencies
    default: ""

jobs:
  - job: build_docker_image
    timeoutInMinutes: 0
    dependsOn: ${{ parameters.dependencies }}
    steps:
      - task: UsePythonVersion@0
        displayName: "install python 3.8"
        continueOnError: false
        inputs:
          versionSpec: "3.8"

      - task: AzureKeyVault@2
        continueOnError: false
        inputs:
          azureSubscription: $(AZURE_RM_SVC_CONNECTION)
          KeyVaultName: $(KEYVAULT_NAME)
          SecretsFilter: "*"
          RunAsPreJob: false

      - script: |
          python -m venv env
        displayName: "Create Virtual env"

      - task: AzureCLI@2
        displayName: "setup the build server"
        continueOnError: false
        inputs:
          azureSubscription: $(AZURE_RM_SVC_CONNECTION)
          scriptType: bash
          workingDirectory: $(system.DefaultWorkingDirectory)
          scriptLocation: inlineScript
          inlineScript: |
            source env/bin/activate
            python -m pip install --upgrade pip
            pip install -r model_factory/${{parameters.model_type}}/devops/pipelines/requirements/execute_job_requirements.txt
            az extension add -n ml -y
            az upgrade --yes
            az config set extension.use_dynamic_install=yes_without_prompt

      - task: AzureCLI@2
        displayName: Download Model artifacts from AzureML Model Registry
        continueOnError: false
        inputs:
          azureSubscription: $(AZURE_RM_SVC_CONNECTION)
          scriptType: bash
          scriptLocation: inlineScript
          workingDirectory: $(system.DefaultWorkingDirectory)
          inlineScript: |
            set -e # fail on error
            source env/bin/activate
            az ml model download --name ${{parameters.model_name}} --version $(az ml model list --name ${{parameters.model_name}}  --resource-group $(RESOURCE_GROUP_NAME)  --workspace-name $(WORKSPACE_NAME) --query "[0].version" --output tsv) --download-path model_factory/${{parameters.model_type}}/model/model_download  -g $(RESOURCE_GROUP_NAME) -w $(WORKSPACE_NAME)
            tar -xvzf model_factory/${{parameters.model_type}}/model/model_download/${{parameters.model_name}}/model_artifacts.tar.gz -C model_factory/${{parameters.model_type}}/model/model_artifacts

      - task: AzureCLI@2
        displayName: Build Docker Image with model artifacts
        continueOnError: false
        inputs:
          azureSubscription: $(AZURE_RM_SVC_CONNECTION)
          scriptType: bash
          workingDirectory: $(system.DefaultWorkingDirectory)/model_factory/${{parameters.model_type}}/model
          scriptLocation: inlineScript
          inlineScript: |
            set -e # fail on error
            # docker buildx use mybuilder
            # docker buildx inspect --bootstrap
            docker login "$(ACR_URL)" -u "$(ACR_USERNAME)" -p "$(ACR_PASSWORD)" 
            docker buildx build --platform linux/amd64 -t $(ACR_URL)/$(MODEL_NAME):$(Build.BuildNumber) . --push
            # docker buildx build --platform linux/amd64 -t $(ACR_URL)/$(MODEL_NAME):$(Build.BuildNumber) . --push
            docker images
            echo "##vso[task.setvariable variable=ML_MODEL_DOCKER_IMAGE_NAME;isOutput=true;]$(MODEL_NAME)"
            echo "##vso[task.setvariable variable=ML_MODEL_DOCKER_IMAGE_VERSION;isOutput=true;]$(Build.BuildNumber)"
