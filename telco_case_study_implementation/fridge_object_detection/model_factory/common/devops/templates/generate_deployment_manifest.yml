parameters:
  - name: exec_environment
    displayName: "Execution Environment"
  - name: model_type
    displayName: "type of model to execute"
  - name: image_version
    displayName: "Version of the deployment"

jobs:
  - job: "Generate_Edge_Deployment_Manifest"
    displayName: "Generate Layered Edge Deployment Manifest"
    steps:
      - task: AzureKeyVault@2
        continueOnError: false
        inputs:
          azureSubscription: $(AZURE_RM_SVC_CONNECTION)
          KeyVaultName: "$(KEYVAULT_NAME)"
          SecretsFilter: "*"
          RunAsPreJob: false
      - task: UsePythonVersion@0
        displayName: "install python 3.8"
        continueOnError: false
        inputs:
          versionSpec: "3.8"
      - task: Bash@3
        displayName: Add Azure IoT Extensions
        inputs:
          targetType: "inline"
          script: "pip install -U pyOpenSSL==22.0.0"

      - script: |
          echo "##vso[task.setvariable variable=CONTAINER_REGISTRY_NAME]$(REGISTRY_NAME)"
          echo "##vso[task.setvariable variable=CONTAINER_REGISTRY_USERNAME]$(registry-username)"
          echo "##vso[task.setvariable variable=CONTAINER_REGISTRY_PASSWORD]$(registry-password)"
          echo "##vso[task.setvariable variable=CONTAINER_REGISTRY_ADDRESS]$(registry-uri)"
          echo "##vso[task.setvariable variable=ML_MODEL_DOCKER_IMAGE_NAME]$(MODEL_NAME)"
          echo "##vso[task.setvariable variable=ML_MODEL_DOCKER_VERSION]${{ parameters.image_version }}"
          echo "##vso[task.setvariable variable=SMOKE_TEST_DOCKER_NAME]$(SMOKE_TEST_DOCKER_NAME)"
          echo "##vso[task.setvariable variable=SMOKE_TEST_DOCKER_VERSION]${{ parameters.image_version }}"
          echo "##vso[task.setvariable variable=HOST_PORT_NUMBER]$(host_port_number)"
        displayName: Get image information from module.json
      - task: CopyFiles@2
        displayName: Copy Edge Deployment Manifest
        inputs:
          contents: "deployment.template.json"
          targetFolder: $(Build.ArtifactStagingDirectory)/edgeconfig
          cleanTargetFolder: true
          sourceFolder: $(System.DefaultWorkingDirectory)/model_factory/common/edge
      - task: replacetokens@3
        displayName: "Replace tokens in *.config *.json"
        inputs:
          targetFiles: "$(Build.ArtifactStagingDirectory)/edgeconfig/deployment.template.json"
          verbosity: detailed
          tokenPrefix: "${"
          tokenSuffix: "}"
          keepToken:variables: true

      - task: PublishBuildArtifacts@1
        displayName: Publish Manifest To Artifacts
        inputs:
          pathToPublish: $(Build.ArtifactStagingDirectory)
          artifactName: DeploymentManifest
