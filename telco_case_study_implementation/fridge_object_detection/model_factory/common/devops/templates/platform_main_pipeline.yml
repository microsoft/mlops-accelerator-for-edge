parameters:
  - name: exec_environment
    displayName: "Execution Environment"
    default: "dev"
  - name: model_type
    displayName: "type of model to execute"
  - name: TARGET_CONDITION
    displayName: "Target Condition for the deployment"
  - name: runMlops
    displayName: "Run MLOps"
    default: true

stages:
  - stage: execute_training_job
    displayName: execute_training_job
    dependsOn:
      - variable_generation
      - build_validation
    variables:
      - template: ${{variables['System.DefaultWorkingDirectory']}}/model_factory/common/devops/templates/experiment_variables.yml
      - group: mlops_platform_dev_vg
    jobs:
      - job: Execute_ml_Job_Pipeline
        condition: eq('${{ parameters.runMlops }}', true)
        timeoutInMinutes: 360
        steps:
          - task: UsePythonVersion@0
            displayName: "Use Python 3.8"
            inputs:
              versionSpec: "3.8"
              addToPath: true
          - template: ${{variables['System.DefaultWorkingDirectory']}}/model_factory/common/devops/templates/get_connection_details.yml
          - template: ${{variables['System.DefaultWorkingDirectory']}}/model_factory/common/devops/templates/configure_azureml_agent.yml
            parameters:
              model_type: ${{parameters.model_type}}
          - template: ${{variables['System.DefaultWorkingDirectory']}}/model_factory/${{parameters.model_type}}/devops/pipelines/${{parameters.model_type}}_mlops_pipeline.yml
            parameters:
              model_type: ${{parameters.model_type}}
              model_name: "${{parameters.model_type}}_prod_master"

      - template: ${{variables['System.DefaultWorkingDirectory']}}/model_factory/common/devops/templates/image_generation_template.yml
        parameters:
          exec_environment: ${{ parameters.exec_environment }}
          model_type: ${{ parameters.model_type }}
          model_name: "${{parameters.model_type}}_prod_master"

  # Generate Deployment manifest
  - stage: Generate_Edge_Deployment_Manifest
    displayName: Generate_Edge_Deployment_Manifest
    dependsOn:
      - variable_generation
      - build_validation
      - execute_training_job
    variables:
      - template: ${{variables['System.DefaultWorkingDirectory']}}/model_factory/common/devops/templates/experiment_variables.yml
    jobs:
      - template: ${{variables['System.DefaultWorkingDirectory']}}/model_factory/common/devops/templates/generate_deployment_manifest.yml
        parameters:
          exec_environment: ${{ parameters.exec_environment }}
          model_type: ${{ parameters.model_type }}
          image_version: $(Build.BuildNumber)

  # Build Smoke test module
  - stage: Build_Test_Edge_Module
    displayName: "Build smoke test module"
    dependsOn:
      - variable_generation
      - execute_training_job
      - Generate_Edge_Deployment_Manifest
    variables:
      - template: ${{variables['System.DefaultWorkingDirectory']}}/model_factory/common/devops/templates/experiment_variables.yml
    jobs:
      - job: "build_smoke_test_module"
        displayName: "Deploy smoke test image To Edge Device"
        steps:
          - task: AzureKeyVault@2
            continueOnError: false
            inputs:
              azureSubscription: $(AZURE_RM_SVC_CONNECTION)
              KeyVaultName: $(KEYVAULT_NAME)
              SecretsFilter: "*"
              RunAsPreJob: false
          - task: UsePythonVersion@0
            displayName: "install python 3.8"
            continueOnError: false
            inputs:
              versionSpec: "3.8"
          - task: Bash@3
            displayName: Add Azure IoT Extensions
            inputs:
              targetType: "inline"
              script: "pip install -U pyOpenSSL==22.0.0"
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: "current"
              specificBuildWithTriggering: false
              buildVersionToDownload: "latest"
              artifactName: DeploymentManifest
              downloadPath: "$(System.ArtifactsDirectory)"
              cleanDestinationFolder: true # Optional
          - task: AzureCLI@2
            displayName: "Build and push smoke test Docker image"
            inputs:
              azureSubscription: $(AZURE_RM_SVC_CONNECTION)
              scriptType: "bash"
              scriptLocation: "inlineScript"
              workingDirectory: $(system.DefaultWorkingDirectory)
              inlineScript: |
                docker buildx use mybuilder
                docker buildx inspect --bootstrap
                docker login "$(registry-uri)" -u "$(registry-username)" -p "$(registry-password)" 
                docker buildx build --platform linux/arm64 -t "$(registry-uri)"/$(SMOKE_TEST_DOCKER_NAME):$(Build.BuildNumber) --file  $(system.DefaultWorkingDirectory)/model_factory/common/smoke_test/modules/TestModule/Dockerfile . --output type=docker
                docker push $(registry-uri)/$(SMOKE_TEST_DOCKER_NAME):$(Build.BuildNumber)
                docker images

  # Deploy edge modules
  - stage: Deploy_IoT_Edge
    displayName: "Run Smoke Test"
    variables:
      - template: ${{variables['System.DefaultWorkingDirectory']}}/model_factory/common/devops/templates/experiment_variables.yml
    dependsOn:
      - variable_generation
      - Build_Test_Edge_Module
      - Generate_Edge_Deployment_Manifest
    jobs:
      - template: ${{variables['System.DefaultWorkingDirectory']}}/model_factory/common/devops/templates/smoke_test.yml
        parameters:
          exec_environment: ${{ parameters.exec_environment }}
          model_type: ${{ parameters.model_type }}
          deployment_id: $(Build.Buildid)
          TARGET_CONDITION: ${{ parameters.TARGET_CONDITION }}
